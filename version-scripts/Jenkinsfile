node('dev-docker-64-slave-4') {
    
    stage " Download Elastest-toolbox"

        def mycontainer = docker.image('elastest/ci-docker-compose-py-siblings')
        mycontainer.pull() // make sure we have the latest available from Docker Hub
        mycontainer.inside("-u 0 -v /var/run/docker.sock:/var/run/docker.sock:rw -v /var/lib/jenkins/caches/durable-task:/var/lib/jenkins/caches/durable-task:rw -v ${WORKSPACE}:/home/jenkins/.m2") {
            
            checkout([
                $class: 'GitSCM', 
                branches: scm.branches, 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[
                  $class: 'SubmoduleOption', 
                  disableSubmodules: false, 
                  parentCredentials: true, 
                  recursiveSubmodules: true, 
                  reference: '', 
                  trackingSubmodules: false
                ]], 
                submoduleCfg: [], 
                userRemoteConfigs: [[url: 'https://github.com/elastest/elastest-toolbox']]
              ])



            stage "Platform image freeze"
    
              "Freezing platform docker image"
            
                echo ("Freezing platform docker image")                
		withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'elastestci-dockerhub',
                    usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) {
                    sh 'docker login -u "$USERNAME" -p "$PASSWORD"; cd version-scripts; python ETPlatformFreeze.py ${TAG}'
                }


        }
}
